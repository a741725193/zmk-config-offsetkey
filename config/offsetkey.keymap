#define BASE 0
#define LOWER 1
#define MOUSE_KEYS 2
#define MOUSE_TP 3
#define MOUSE_TP_SET 3

// We store the trackpoint settings in a separate file
// to make organization a little easier.

#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors/toggle_io.dtsi>
//#include <behaviors/on_io.dtsi>
//#include <behaviors/off_io.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define HAS_MOUSE_TP

#include "include/mouse_tp.dtsi"

#define U_TOG_TP_SET &tog MOUSE_TP_SET

/ {
    behaviors {
        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
        };
    };

    combos {
        compatible = "zmk,combos";

        flash {
            bindings = <&bootloader>;
            key-positions = <0 11>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp ESC       &kp N1          &kp N2           &kp N3          &kp N4     &kp N5     &kp N6      &ext_power EP_ON  &kp N8     &ext_power EP_OFF  &kp N0   &kp MINUS  &kp EQUAL  &kp BSPC      &kp DELETE                       &kp NUMBER_6
&kp TAB       &kp Q           &kp W            &kp E           &kp R      &kp T                  &kp Y             &kp U      &kp I              &kp O    &kp P      &kp LBKT   &kp RBKT      &kp BSLH         &rgb_ug RGB_ON  &kp T
&kp CAPS      &kp A           &kp S            &kp D           &kp F      &kp G                  &kp H             &kp J      &kp K              &kp L    &kp SEMI   &kp APOS   &kp KP_ENTER  &rgb_ug RGB_OFF                  &kp G
&kp LSHFT     &kp Z           &kp X            &kp C           &kp V      &kp B                  &kp N             &kp M      &kp COMMA          &kp DOT  &kp FSLH   &kp RSHFT  &kp UP_ARROW  &kp F5                           &kp B
&kp LCTRL     &kp LEFT_GUI    &kp LEFT_ALT     &mo 1                      &kp SPACE                                &kp SPACE  &kp RIGHT_ALT      &mo 2    &kp RCTRL  &kp LEFT   &kp DOWN      &kp RIGHT                        &kp SPACE
&kp UP_ARROW  &kp LEFT_ARROW  &kp RIGHT_ARROW  &kp DOWN_ARROW  &kp ENTER  &kp SPACE
            >;

            label = "BASE";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_1 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans      &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans        &trans  &trans  &trans  &kp HOME             &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans        &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans  &trans  &trans  &trans      &kp END  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans  &trans  &kp INSERT           &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans               &trans
&trans  &trans  &trans  &trans          &trans                            &trans        &trans        &trans        &trans  &trans  &trans  &trans               &trans
&trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans           &trans           &trans  &trans  &trans  &trans  &trans          &kp HOME             &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans           &trans           &trans  &trans  &trans  &trans  &trans          &trans      &kp END  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans           &trans           &trans  &trans  &trans  &trans  &trans          &kp INSERT           &trans
&trans  &trans  &trans  &trans  &trans  &trans              &rgb_ug RGB_OFF  &rgb_ug RGB_OFF  &trans  &trans  &trans  &trans  &trans          &trans               &trans
&trans  &trans  &trans  &trans          &trans                               &trans           &trans  &trans  &trans  &trans  &bt BT_CLR_ALL  &bt BT_CLR           &trans
&trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans
&trans  &trans  &trans  &trans          &trans                      &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans
&trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        //      layer_4 {
        //            bindings = <
        //  U_TOG_TP_SET  U_TOG_TP_SET   &trans  U_MSS_TP_S_D   U_MSS_TP_S_I     U_MSS_TP_PT_I     &trans      U_MSS_TP_PT_I   U_MSS_TP_S_D  U_MSS_TP_S_I   U_TOG_TP_SET  U_TOG_TP_SET  &trans  &trans  &trans          &trans
        //     U_MSS_RESET  U_MSS_RESET   &trans  U_MSS_TP_NI_D  U_MSS_TP_NI_I   U_MSS_TP_PT_D              &trans  U_MSS_TP_PT_D  U_MSS_TP_NI_D  U_MSS_TP_NI_I  U_MSS_RESET  U_MSS_RESET  &trans  &trans  &trans  &trans
        //     U_MSS_LOG  U_MSS_LOG   &trans  U_MSS_TP_V6_D  U_MSS_TP_V6_I  &trans              &trans  &trans  U_MSS_TP_V6_D  U_MSS_TP_V6_I  &trans  &trans  &trans  &trans          &trans
        //    &trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans
        //    &trans  &trans  &trans  &trans          &trans                      &trans  &mkp LCLK  &mkp RCLK  &trans  &trans  &trans  &trans          &trans
        //    &trans  &trans  &trans  &trans   &mkp LCLK   &mkp RCLK
        //            >;
        //      };
    };
};
