#include <dt-bindings/zmk/matrix_transform.h>
#include  "offsetkey_physical_layout.dtsi"
#include <dt-bindings/led/led.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/keys.h>


#include <dt-bindings/zmk/matrix_transform.h>
#include  "offsetkey_physical_layout.dtsi"


/ {
     chosen {
        zmk,physical-layout = &offsetkey_physical_layout;
        zephyr,display = &oled;
        zmk,kscan = &kscan0;
        zmk,backlight = &backlight;
    };

backlight: pwmleds {
    compatible = "pwm-leds";
   // pwm_led_0: pwm_led_0 {
   //     pwms = <&pwm0 0 PWM_MSEC(1) PWM_POLARITY_NORMAL>;
  //  };
    pwm_led_1: pwm_led_1 {
        pwms = <&pwm0 1 PWM_MSEC(1) PWM_POLARITY_NORMAL>;
    };
   pwm_led_2: pwm_led_2 {
      pwms = <&pwm0 2 PWM_MSEC(1) PWM_POLARITY_NORMAL>;
   };
};
	left_encoder: encoder_left {
		compatible = "alps,ec11";
		label = "LEFT_ENCODER";
		resolution = <4>;
        steps = <40>;
        a-gpios = <&gpio1 0 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
	    b-gpios = <&gpio0 25 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		status = "disabled";
	};

    sensors {
		compatible = "zmk,keymap-sensors";
		sensors = <&left_encoder>;
	};

    default_transform: keymap_transform_0 {
		compatible = "zmk,matrix-transform";
        columns = <19>;
        rows = <6>;

        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6)            RC(0,9) RC(0,10) RC(0,11) RC(0,12) RC(0,13) RC(0,14) RC(0,15) RC(0,16) RC(0,18)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)                    RC(1,9) RC(1,10) RC(1,11) RC(1,12) RC(1,13) RC(1,14) RC(1,15) RC(1,16) RC(1,17) RC(1,18)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)                    RC(2,9) RC(2,10) RC(2,11) RC(2,12) RC(2,13) RC(2,14) RC(2,15) RC(2,16) RC(2,18)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5)                    RC(3,9) RC(3,10) RC(3,11) RC(3,12) RC(3,13) RC(3,14) RC(3,15) RC(3,16) RC(3,18)
            RC(4,0) RC(4,1) RC(4,2) RC(4,3)         RC(4,5)                                     RC(4,11) RC(4,12) RC(4,13) RC(4,14) RC(4,15) RC(4,16) RC(4,17) RC(4,18)
            RC(5,0) RC(5,1) RC(5,2) RC(5,3) RC(5,4) RC(5,5)
        >;
    };
};    

&i2c0 {
	status = "okay";
	compatible = "nordic,nrf-twi";
    pinctrl-0 = <&i2c0_default>;
    pinctrl-1 = <&i2c0_sleep>;
    oled: ssd1306@3c {
        compatible = "solomon,ssd1306fb";
        reg = <0x3c>;
        width = <128>;
        height = <32>;
        segment-offset = <0>;
        page-offset = <0>;
        display-offset = <0>;
        multiplex-ratio = <31>;
        segment-remap;
        com-invdir;
        com-sequential;
        inversion-on;
        prechargep = <0x22>;
    };
};



&pinctrl {
    // Other Pinctrl definitions go here
    pwm0_default: pwm0_default {
        group1 {
            psels = //<NRF_PSEL(PWM_OUT0, 1, 3)>, 
                    <NRF_PSEL(PWM_OUT1, 0, 27)>; // LED 1
                    <NRF_PSEL(PWM_OUT2, 1, 2)>; LED 2
        };
    };
    pwm0_sleep: pwm0_sleep {
        group1 {
            psels = //<NRF_PSEL(PWM_OUT0, 1, 3)>, 
                    <NRF_PSEL(PWM_OUT1, 0, 27)>; // LED 1
                                                               <NRF_PSEL(PWM_OUT2, 1, 2)>;
            low-power-enable;
        };
    };
};










